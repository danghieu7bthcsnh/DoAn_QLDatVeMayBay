@model QLDatVeMayBay.Models.DatGhe

@{
    ViewData["Title"] = "Chọn ghế";
    int tongSoGhe = Model.TongSoGhe;
    var gheDaDat = Model.GheDaDat;
}

<a class="btn btn-outline-secondary btn-back" href="javascript:history.back()">← Quay lại</a>

<h2 class="text-primary">Chọn ghế</h2>

@if (TempData["LoiChonGhe"] != null)
{
    <div class="alert alert-danger mt-2">
        @TempData["LoiChonGhe"]
    </div>
}

<form asp-action="XacNhanVe" method="post" onsubmit="return kiemTraChonGhe();">
    <input type="hidden" name="idChuyenBay" value="@Model.IDChuyenBay" />

    <div class="d-flex flex-wrap gap-2 mt-3">
        @for (int i = 1; i <= tongSoGhe; i++)
        {
            var disabled = gheDaDat.Contains(i) ? "disabled" : "";
            var colorClass = gheDaDat.Contains(i) ? "btn-danger" : "btn-outline-success";

            <div class="text-center">
                <input type="radio" name="idGhe" value="@i" id="ghe_@i" class="btn-check" autocomplete="off" @disabled />
                <label class="btn @colorClass" for="ghe_@i">@("G" + i)</label>
            </div>
        }
    </div>

    <div class="mt-4">
        <button type="submit" class="btn btn-primary">Đặt vé</button>
    </div>
</form>
@section Scripts {
    <script>
        let lastChecked = null;

        document.querySelectorAll('input[type=radio][name=idGhe]').forEach(function (radio) {
            radio.addEventListener('click', function (e) {
                if (this === lastChecked) {
                    this.checked = false;
                    lastChecked = null;
                } else {
                    lastChecked = this;
                }
            });
        });

        function kiemTraChonGhe() {
            const gheChon = document.querySelector('input[name="idGhe"]:checked');
            if (!gheChon) {
                alert("Vui lòng chọn một ghế trước khi đặt vé.");
                return false;
            }
            return true;
        }
    </script>
}
